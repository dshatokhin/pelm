
import "@k8s/api/autoscaling/v2/HorizontalPodAutoscaler.pkl"
import ".../pelm.pkl"

manifest: HorizontalPodAutoscaler? = if (pelm.values.autoscaling.enabled) new {
  metadata {
    name = pelm.helpers.fullname
    namespace = pelm.namespace
    labels = pelm.helpers.labels
  }
  spec {
    scaleTargetRef {
      apiVersion = "apps/v1"
      kind = "Deployment"
      name = pelm.helpers.fullname
    }
    minReplicas = pelm.values.autoscaling.minReplicas
    maxReplicas = pelm.values.autoscaling.maxReplicas
    metrics {
      when (pelm.values.autoscaling.targetCPUUtilizationPercentage.isNonZero) {
        new {
          type = "Resource"
          resource {
            name = "cpu"
            target {
              type = "Utilization"
              averageUtilization = pelm.values.autoscaling.targetCPUUtilizationPercentage
            }
          }
        }
      }
      when (pelm.values.autoscaling.targetMemoryUtilizationPercentage.isNonZero) {
        new {
          type = "Resource"
          resource {
            name = "memory"
            target {
              type = "Utilization"
              averageUtilization = pelm.values.autoscaling.targetMemoryUtilizationPercentage
            }
          }
        }
      }
    }
  }
} else null
